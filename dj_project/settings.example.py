"""
Django settings for dj_project project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-9x+hq+@9@dmz+j=7!jdp%efjybly0gm11d21k*s17vv^88mhe('

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = False

ALLOWED_HOSTS = ['*']
# 如果想开启调试模式，换成以下即可
# DEBUG = True
# ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'timing_blog.apps.TimingBlogConfig',
    'django.contrib.sitemaps',
    'django.contrib.sites',
    'django_comments',
]
# 这些都是内置的核心功能,注册到app      有个功能多个站点运行，就是这个sites

SITE_ID = 1
# 当前项目的SITE ID设置为１

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dj_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dj_project.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
import pymysql
pymysql.install_as_MySQLdb()
DATABASES = {
    # 默认数据库
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'dj_project',
        'USER': 'xxx',
        'PASSWORD': 'xxx',
        'HOST': '192.168.137.1',  # mysql服务所在的主机ip
        'PORT': '3306',  # mysql的默认端口
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
# 设置完就会把这个根目录下的static当作基本静态文件放置目录

STATIC_ROOT = os.path.join(BASE_DIR, 'all_static_files')
# 在Python中，这段代码并不是一个函数定义，而是定义了一个名为STATIC_ROOT的变量，并将其赋值为项目中的一个静态文件目录路径。
# - BASE_DIR: 这通常是一个指向Python Django项目的根目录的路径。在Django项目配置文件（settings.py）中，
# BASE_DIR通常被设置为包含manage.py文件的目录路径。  - os.path.join(): 这是Python内置os模块中的一个方法，
# 用于将多个路径片段拼接成一个完整的、平台无关的路径。例如，在Unix系统中，它会使用正斜杠（/）连接路径片段，
# 而在Windows系统中则使用反斜杠（\）。  - 'all_static_files': 这是一个字符串，
# 代表了相对于BASE_DIR的基础路径下的子目录名，该目录用于存储所有的静态文件。
# 因此，结合以上解释，STATIC_ROOT变量的值表示的是Django项目根目录下名为all_static_files的子目录的完整路径，
# 这个路径通常用来在部署时收集和管理Django应用的所有静态资源文件（如CSS、JavaScript和图片等）。
MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media').replace("\\", "/")
# 确保在设置文件中定义了相应的静态文件和媒体文件存储路径，以确保文件能够正确地提供和存储。
# 这样配置后，Django 将能够正确地处理静态文件和媒体文件，并将它们提供给应用程序。
# 确保您的静态文件和媒体文件存储路径位于项目根目录下的相应文件夹中，并且这些文件夹中包含您的静态文件和用户上传的媒体文件。

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
